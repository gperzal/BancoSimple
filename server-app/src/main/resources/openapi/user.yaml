paths:
  /api/users:
    get:
      summary: Obtener todos los usuarios
      description: Devuelve una lista de todos los usuarios registrados en el sistema.
      tags: [Usuarios]
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'

    post:
      summary: Crear un nuevo usuario
      description: Registra un nuevo usuario en el sistema.
      tags: [Usuarios]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: Usuario creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'

  /api/users/{id}:
    get:
      summary: Obtener usuario por ID
      description: Obtiene los datos de un usuario específico.
      tags: [Usuarios]
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario
          schema:
            type: integer
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'

    put:
      summary: Actualizar usuario
      description: Actualiza la información de un usuario existente.
      tags: [Usuarios]
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: Usuario actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'

    delete:
      summary: Eliminar usuario
      description: Elimina un usuario por su ID.
      tags: [Usuarios]
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario
          schema:
            type: integer
      responses:
        '204':
          description: Usuario eliminado correctamente

  /api/users/search:
    get:
      summary: Buscar usuario por RUT
      description: Devuelve nombre, correo, RUT y números de cuenta frecuentes (internas o externas) de un cliente dado su RUT.
      tags: [Usuarios]
      parameters:
        - name: rut
          in: query
          required: true
          description: RUT del cliente (formato 12.345.678-9)
          schema:
            type: string
      responses:
        '200':
          description: Datos de usuario y cuentas frecuentes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccountDTO'

  /api/frequent-accounts:
    get:
      summary: Obtener todas las cuentas frecuentes
      description: Devuelve la lista de cuentas frecuentes registradas por los usuarios.
      tags: [Cuentas Frecuentes]
      responses:
        '200':
          description: Lista de cuentas frecuentes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FrequentAccountDTO'

    post:
      summary: Agregar cuenta frecuente
      description: Agrega una nueva cuenta frecuente asociada a un usuario.
      tags: [Cuentas Frecuentes]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrequentAccountDTO'
      responses:
        '200':
          description: Cuenta frecuente agregada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrequentAccountDTO'

  /api/frequent-accounts/{id}:
    get:
      summary: Obtener cuenta frecuente por ID
      description: Devuelve los detalles de una cuenta frecuente específica.
      tags: [Cuentas Frecuentes]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID de la cuenta frecuente
      responses:
        '200':
          description: Cuenta frecuente encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrequentAccountDTO'

    put:
      summary: Actualizar cuenta frecuente
      description: Actualiza la información de una cuenta frecuente.
      tags: [Cuentas Frecuentes]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID de la cuenta frecuente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrequentAccountDTO'
      responses:
        '200':
          description: Cuenta frecuente actualizada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrequentAccountDTO'

    delete:
      summary: Eliminar cuenta frecuente
      description: Elimina una cuenta frecuente del sistema.
      tags: [Cuentas Frecuentes]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID de la cuenta frecuente
      responses:
        '204':
          description: Cuenta frecuente eliminada correctamente

components:
  schemas:
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nombres:
          type: string
          example: Juan
        apellidos:
          type: string
          example: Pérez
        correo:
          type: string
          example: juan.perez@example.com
        telefono:
          type: string
          example: "+56912345678"
        documentoTipo:
          type: string
          example: "RUT"
        documentoNumero:
          type: string
          example: "12.345.678-9"
        tipoUsuario:
          type: string
          example: "cliente"
        estadoId:
          type: integer
          example: 1
        fechaNacimiento:
          type: string
          format: date
        fechaRegistro:
          type: string
          format: date-time

    UserAccountDTO:
      type: object
      properties:
        nombres:
          type: string
          example: Juan
        apellidos:
          type: string
          example: Pérez
        correo:
          type: string
          example: juan.perez@example.com
        documentoNumero:
          type: string
          example: "12.345.678-9"
        numerosDeCuenta:
          type: array
          items:
            type: string
          example:
            - "42"
            - "9876543210"

    FrequentAccountDTO:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        type:
          type: string
          enum: [INTERNAL, EXTERNAL]
        favoriteProductId:
          type: integer
          nullable: true
        externalBankName:
          type: string
          enum: [BANCO_DE_CHILE, BANCO_ESTADO, SANTANDER, BCI, ITAU, FALABELLA, CENCOSUD, SECURITY, BICE, SCOTIABANK, HSBC, CORPBANCA]
          nullable: true
        externalAccountNumber:
          type: string
          nullable: true
        externalHolderName:
          type: string
          nullable: true
        alias:
          type: string
          example: "Cuenta de mamá"
        addedDate:
          type: string
          format: date-time
        active:
          type: boolean
